{"version":3,"sources":["person.jsx","App.js","index.js"],"names":["Partner","name","spouseSex","this","noun","Person","sex","age","isMarried","partnerName","partner","className","toPossesiveCase","defaultProps","misha","olya","alex","App","ReactDOM","render","document","getElementById"],"mappings":"+LAGMA,E,WACJ,WAAYC,EAAMC,GAAY,oBAC5BC,KAAKC,KAAqB,MAAdF,EAAoB,OAAS,UACzCC,KAAKF,KAAOA,E,mDAGd,WACE,MAAM,GAAN,OAAUE,KAAKC,KAAf,U,KAIG,SAASC,EAAT,GAA6D,IAA3CJ,EAA0C,EAA1CA,KAAMK,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAC5CC,EAAU,IAAIV,EAAQS,EAAaH,GAEzC,OACE,0BAASK,UAAU,SAAnB,UACE,oBAAIA,UAAU,eAAd,8BAA4CV,KAC3CM,GACC,mBAAGI,UAAU,cAAb,wBAAoCJ,KACtC,mBAAGI,UAAU,kBAAb,SACGH,EAAS,aAASE,EAAQE,kBAAjB,oBAA8CF,EAAQT,MAAtD,wBAOlBI,EAAOQ,aAAe,CACpBZ,KAAM,UACNK,IAAK,UACLC,IAAK,KACLC,WAAW,EACXC,YAAa,WC/Bf,IAAMK,EACE,QADFA,EAEC,GAFDA,EAGC,IAHDA,GAIO,EAJPA,EAKS,UAGTC,EAAO,CACXd,KAAM,OACNK,IAAK,IACLE,WAAW,EACXC,YAAa,UAGTO,EAAO,CACXf,KAAM,OACNM,IAAK,GACLD,IAAK,IACLE,WAAW,GA+BES,EA5BH,kBACV,sBAAKN,UAAU,MAAf,UACE,cAACN,EAAD,CACEJ,KAAMa,EACNP,IAAKO,EACLR,IAAKQ,EACLN,UAAWM,EACXL,YAAaK,IAGf,cAACT,EAAD,CACEJ,KAAMc,EAAKd,KACXM,IAAKQ,EAAKR,IACVD,IAAKS,EAAKT,IACVE,UAAWO,EAAKP,UAChBC,YAAaM,EAAKN,cAGpB,cAACJ,EAAD,CACEJ,KAAMe,EAAKf,KACXM,IAAKS,EAAKT,IACVD,IAAKU,EAAKV,IACVE,UAAWQ,EAAKR,UAChBC,YAAaO,EAAKP,kBC7CxBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.581f746a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Partner {\n  constructor(name, spouseSex) {\n    this.noun = spouseSex === 'm' ? 'wife' : 'husband';\n    this.name = name;\n  }\n\n  toPossesiveCase() {\n    return `${this.noun}'s`;\n  }\n}\n\nexport function Person({ name, sex, age, isMarried, partnerName }) {\n  const partner = new Partner(partnerName, sex);\n\n  return (\n    <section className=\"Person\">\n      <h2 className=\"Person__name\">{`My name is ${name}`}</h2>\n      {age && (\n        <p className=\"Person__age\">{`I am ${age}`}</p>)}\n      <p className=\"Person__partner\">\n        {isMarried ? `My ${partner.toPossesiveCase()} name is ${partner.name}`\n          : `I am not married`}\n      </p>\n    </section>\n  );\n}\n\nPerson.defaultProps = {\n  name: 'unknown',\n  sex: 'unknown',\n  age: null,\n  isMarried: false,\n  partnerName: 'unknown',\n};\n\nPerson.propTypes = {\n  name: PropTypes.string,\n  sex: PropTypes.oneOf(['f', 'm']),\n  age: PropTypes.number,\n  isMarried: PropTypes.bool,\n  partnerName: PropTypes.string,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Person } from './person';\n\nconst misha = {\n  name: 'Misha',\n  age: 37,\n  sex: 'm',\n  isMarried: true,\n  partnerName: 'Natasha',\n};\n\nconst olya = {\n  name: 'Olya',\n  sex: 'f',\n  isMarried: true,\n  partnerName: 'Maksym',\n};\n\nconst alex = {\n  name: 'Alex',\n  age: 25,\n  sex: 'm',\n  isMarried: false,\n};\n\nconst App = () => (\n  <div className=\"App\">\n    <Person\n      name={misha.name}\n      age={misha.age}\n      sex={misha.sex}\n      isMarried={misha.isMarried}\n      partnerName={misha.partnerName}\n    />\n\n    <Person\n      name={olya.name}\n      age={olya.age}\n      sex={olya.sex}\n      isMarried={olya.isMarried}\n      partnerName={olya.partnerName}\n    />\n\n    <Person\n      name={alex.name}\n      age={alex.age}\n      sex={alex.sex}\n      isMarried={alex.isMarried}\n      partnerName={alex.partnerName}\n    />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}